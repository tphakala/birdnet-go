name: golangci-lint

concurrency:
  group: golangci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - '.github/workflows/**'
      - '**.md'
  workflow_call:

permissions:
  contents: read
  #pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25.1'
          cache: true
      - run: go version

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache TensorFlow headers
        uses: actions/cache@v4
        with:
          path: ~/src/tensorflow
          key: ${{ runner.os }}-tensorflow-v2.17.1

      - name: Install dependencies
        run: task check-tensorflow
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
      
      - name: Set environment variables for CGO
        run: |
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
          echo "CGO_CFLAGS=-I $HOME/src/tensorflow" >> $GITHUB_ENV

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v2.4.0