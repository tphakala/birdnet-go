# BirdNET-Go configuration

debug: false              # print debug messages, can help with problem solving

# Node specific settings
main:
  name: BirdNET-Go        # name of node, can be used to identify source of notes
  timeas24h: true         # true for 24-hour time format, false for 12-hour time format
  log:
    enabled: true         # true to enable log file
    path: birdnet.log     # path to log file
    rotation: daily       # daily, weekly or size
    maxsize: 1048576      # max size in bytes for size rotation
    rotationday: "Sunday" # day of the week for weekly rotation, 0 = Sunday

# BirdNET model specific settings
birdnet:
  sensitivity: 1.0        # sigmoid sensitivity, 0.1 to 1.5
  threshold: 0.8          # threshold for prediction confidence to report, 0.0 to 1.0
  overlap: 1.5            # overlap between chunks, 0.0 to 2.9
  threads: 0              # 0 to use all available CPU threads
  locale: en-us           # language to use for labels
  latitude: 00.000        # latitude of recording location for prediction filtering
  longitude: 00.000       # longitude of recording location for prediction filtering
  rangefilter:
      model: latest       # model to use for range filter: "latest" or "legacy" for previous model
      threshold: 0.01     # rangefilter species occurrence threshold
  modelpath: ""           # path to external model file (empty for embedded)
  labelpath: ""           # path to external label file (empty for embedded)
  usexnnpack: true        # true to use XNNPACK delegate for inference acceleration

# Realtime processing settings
realtime:
  interval: 15            # duplicate prediction interval in seconds
  processingtime: false   # true to report processing time for each prediction
  
  audio:
    source: "sysdefault"  # audio source to use for analysis
    useaudiocore: false   # true to use new audiocore package instead of myaudio
    soundlevel:
      enabled: false      # true to enable sound level monitoring
      interval: 10        # measurement interval in seconds (min 5 recommended, lower values increase CPU load)
    equalizer:
      enabled: false
      filters:
        - type: HighPass
          frequency: 100
          passes: 0 
        - type: LowPass
          frequency: 15000
          passes: 0 
    export:
      enabled: true       # true to export audio clips containing indentified bird calls
      debug: false        # true to enable audio export debug messages
      path: clips/        # path to audio clip export directory
      type: wav           # wav, flac, aac, opus, mp3. Formats other than wav require ffmpeg.
      bitrate: 96k        # bitrate for aac and opus exports
      retention:
        policy: usage     # retention policy: none, age or usage
        maxage: 30d       # age policy: maximum age of clips to keep before starting evictions
        maxusage: 80%     # usage policy: percentage of disk usage to trigger eviction        
        minclips: 10      # minumum number of clips per species to keep before starting evictions
        keepspectrograms: true # true to keep spectrograms even when clips are deleted


  dashboard:
    thumbnails:
      debug: false        # true to enable debug mode for image provider
      summary: false      # show thumbnails on summary table
      recent: true        # show thumbnails on recent table
      imageprovider: auto # preferred image provider: auto, wikimedia, avicommons
      fallbackpolicy: all # fallback policy: none (no fallback), all (try all available providers)
 
  dynamicthreshold:
    enabled: true         # true to enable dynamic confidence threshold
    trigger: 0.90         # dynamic threshold is activated on detections at this confidence level
    min: 0.20             # dynamic threshold will not go lower than this
    validhours: 24        # number of hours to consider for dynamic confidence

  rtsp:    
    transport: tcp        # RTSP Transport Protocol
    urls:                 # RTSP stream URLs
      # - rtsp://user:password@example.com/stream1
      # - rtsp://user:password@example.com/stream2
      # - rtsp://user:password@example.com/stream3
  
  log:
    enabled: false        # true to enable OBS chat log
    path: birdnet.txt     # path to OBS chat log

  birdweather:
    enabled: false        # true to enable birdweather uploads
    locationaccuracy: 500 # accuracy of location in meters
    debug: false          # true to enable birdweather api debug mode
    id: ""                # birdweather ID
    retrysettings:
      enabled: true       # enable retry for failed submissions
      maxretries: 3       # maximum number of retry attempts
      initialdelay: 30    # initial delay before first retry in seconds
      maxdelay: 600       # maximum delay between retries in seconds
      backoffmultiplier: 2.0  # multiplier for exponential backoff

  ebird:
    enabled: false        # true to enable eBird API integration
    apikey: ""            # eBird API key (get from https://ebird.org/api/keygen)
    cachettl: 24          # cache time-to-live in hours (default: 24)
    locale: "en"          # locale for eBird data (e.g., "en", "es", "fr")

  weather:
    provider: yrno
    pollinterval: 60
    debug: false
    openweather:
      apikey: ""        # OpenWeather API key
      endpoint: "https://api.openweathermap.org/data/2.5/weather" # OpenWeather API endpoint
      units: metric     # metric or imperial
      language: en      # language code

  mqtt:
    enabled: false        # true to enable MQTT
    debug: false          # true to enable MQTT debug
    broker: tcp://localhost:1883 # MQTT broker URL (tcp://, ssl://, tls://, or mqtts://)
    topic: birdnet        # MQTT topic
    username: birdnet     # MQTT username
    password: secret      # MQTT password
    retain: false         # true to retain messages
    retrysettings:
      enabled: true       # enable retry for failed publications
      maxretries: 3       # maximum number of retry attempts
      initialdelay: 10    # initial delay before first retry in seconds
      maxdelay: 300       # maximum delay between retries in seconds
      backoffmultiplier: 2.0  # multiplier for exponential backoff
    tls:
      insecureskipverify: false  # skip certificate verification (use with caution)
      cacert: ""          # path to CA certificate file
      clientcert: ""      # path to client certificate file
      clientkey: ""       # path to client key file

  privacyfilter:          # Privacy filter prevents audio clip saving if human voice 
    enabled: true         # is detected durin audio capture
    confidence: 0.05      # threshold for human voice detection

  dogbarkfilter:
    enabled: true
    confidence: 0.1       # confidence threshold for dog bark detection
    remember: 5           # number of minutes to remember dog barks

  telemetry:
    enabled: false         # true to enable Prometheus compatible telemetry endpoint
    listen: "0.0.0.0:8090" # IP address and port to listen on

  # System resource monitoring
  monitoring:
    enabled: true          # true to enable system resource monitoring
    checkinterval: 60      # interval in seconds between resource checks
    cpu:
      enabled: true        # monitor CPU usage
      warning: 85.0        # warning threshold percentage
      critical: 95.0       # critical threshold percentage
    memory:
      enabled: true        # monitor memory usage
      warning: 85.0        # warning threshold percentage
      critical: 95.0       # critical threshold percentage
    disk:
      enabled: true        # monitor disk usage
      warning: 85.0        # warning threshold percentage
      critical: 95.0       # critical threshold percentage
      paths:               # filesystem paths to monitor
        - "/"              # root filesystem
        # - "/home"        # add more paths as needed
        # - "/var"

  # Species-specific configurations
  species:
    include: []           # Always include these species regardless of confidence
    exclude: []           # Always exclude these species regardless of confidence
    config:

webserver:
  enabled: true           # true to enable web server
  port: 8080              # port for web server
  log:
    enabled: false        # true to enable log file
    path: webui.log       # path to log file
    rotation: daily       # daily, weekly or size
    maxsize: 1048576      # max size in bytes for size rotation
    rotationday: 0        # day of the week for weekly rotation, 0 = Sunday

security:
  # host is required for AutoTLS and OAuth providers
  # Must be a fully qualified domain name (e.g., "birdnet.example.com")
  # The domain must point to this server's public IP address
  host: ""
  
  # AutoTLS enables automatic TLS certificate management via Let's Encrypt
  # REQUIREMENTS:
  # - host must be set to a valid domain name
  # - Ports 80 and 443 must be accessible from the internet
  # - Domain must point to this server's IP address
  # - When using Docker, use docker-compose.autotls.yml instead of docker-compose.yml
  autotls: false
  
  # redirecttohttps forces HTTP connections to redirect to HTTPS
  # Only works when autotls is enabled or manual TLS certificates are configured
  redirecttohttps: false
  allowsubnetbypass:
    enabled: false           # true to disable OAuth in subnet
    subnet: ""               # comma-separated list of CIDR ranges (e.g., "192.168.1.0/24,10.0.0.0/8")
  basicauth:
    enabled: false           # true to enable basic auth
    password: ""             # password hash for the settings interface
    clientid: ""             # client id
    clientsecret: ""         # if left empty, will be autogenerated
    redirecturi: ""          # redirect uri prefix
    authcodeexp: 10m           # authorization code expiration
    accesstokenexp: 1h        # access token expiration
  googleauth:
    enabled: false           # true to enable Google OAuth2
    clientid: ""             # client id
    clientsecret: ""         # client secret
    userid: ""               # user id
  githubauth:
    enabled: false           # true to enable GitHub OAuth2
    clientid: ""             # client id
    clientsecret: ""         # client secret
    userid: ""               # user id# Ouput settings

output:
  file:
    enabled: true         # true to enable file output for file and directory analysis
    path: output/         # path to output directory
    type: table           # ouput format, Raven table or csv
  # Only one database is supported at a time
  # if both are enabled, SQLite will be used.
  sqlite:
    enabled: true         # true to enable sqlite output
    path: birdnet.db      # path to sqlite database
  mysql:
    enabled: false        # true to enable mysql output
    username: birdnet     # mysql database username
    password: secret      # mysql database user password
    database: birdnet     # mysql database name
    host: localhost       # mysql database host
    port: 3306            # mysql database port

# Sentry telemetry configuration (opt-in, respects EU privacy laws)
sentry:
  enabled: false          # false by default, must be explicitly enabled by user (opt-in)

# Notification settings
notification:
  push:
    enabled: false
    default_timeout: 30s
    max_retries: 3
    retry_delay: 5s

    # Circuit breaker configuration
    # Protects against cascading failures by temporarily blocking requests to failing providers
    circuit_breaker:
      enabled: true
      max_failures: 5          # Number of consecutive failures before opening circuit
      timeout: 30s             # Time to wait before attempting half-open state
      half_open_max_requests: 1  # Number of test requests allowed in half-open state

    # Health check configuration
    # Periodically verifies provider availability and updates metrics
    health_check:
      enabled: true
      interval: 60s  # How often to check provider health
      timeout: 10s   # Timeout for each health check

    # Rate limiting configuration
    # Prevents overwhelming external APIs with too many requests
    # Disabled by default - enable if you need additional DoS protection beyond circuit breakers
    rate_limiting:
      enabled: false           # Enable to activate rate limiting
      requests_per_minute: 60  # Maximum average request rate
      burst_size: 10           # Maximum burst capacity for spikes

    providers:
      - type: shoutrrr
        enabled: false
        name: "telegram-alerts"
        urls:
          - "telegram://<YOUR_BOT_TOKEN>@telegram?chats=<YOUR_CHAT_ID>"
        timeout: 10s
        filter:
          types: ["error", "detection"]
          priorities: ["critical", "high"]
      - type: script
        enabled: false
        name: test-script
        command: scripts/your-push-script.sh
        args: ["ok"] # use ["fail"] to test non-zero exit
        environment:
        input_format: both    # Options: "json" (stdin only), "env" (env vars only), "both" (env + JSON stdin)
        filter:
          types: ["error", "warning", "info", "detection", "system"]
          priorities: []
          components: []
          metadata_filters: {}
            # Filter by confidence threshold (supports > and < operators)
            # Examples:
            #   confidence: ">0.8"   # Only notifications with >80% confidence
            #   confidence: "<0.3"   # Only low-confidence notifications
            #
            # Other metadata fields use exact string matching:
            #   species: "Northern Cardinal"
            #   location: "backyard"
      # Example 1: Webhook with Environment Variables (recommended for Docker/containers)
      - type: webhook
        enabled: false
        name: "slack-webhook"
        endpoints:
          - url: "https://hooks.slack.com/services/YOUR/WEBHOOK/PATH"
            auth:
              type: bearer
              token: "${SLACK_WEBHOOK_TOKEN}"  # Expands from environment variable
        filter:
          types: ["error", "detection"]

      # Example 2: Webhook with File-based Secrets (recommended for Kubernetes/Docker Swarm)
      # - type: webhook
      #   enabled: false
      #   name: "api-service"
      #   endpoints:
      #     - url: "https://api.example.com/webhooks/birdnet"
      #       auth:
      #         type: bearer
      #         token_file: "/run/secrets/api_token"  # Read from mounted secret file

      # Example 3: Multiple Endpoints with Failover
      # - type: webhook
      #   enabled: false
      #   name: "multi-endpoint"
      #   endpoints:
      #     - url: "https://primary.example.com/webhook"
      #       method: POST
      #       timeout: 10s
      #       auth:
      #         type: bearer
      #         token: "${PRIMARY_TOKEN}"
      #     - url: "https://backup.example.com/webhook"
      #       method: POST
      #       timeout: 15s
      #       auth:
      #         type: basic
      #         user: "${BACKUP_USER}"
      #         pass_file: "/run/secrets/backup_pass"  # Mix env vars and files

      # Example 4: Custom Authentication Headers
      # - type: webhook
      #   enabled: false
      #   name: "custom-auth"
      #   endpoints:
      #     - url: "https://api.example.com/webhook"
      #       headers:
      #         X-Custom-Header: "value"
      #       auth:
      #         type: custom
      #         header: "X-API-Key"
      #         value: "${API_KEY}"  # Or use value_file for file-based secret

      # Example 5: Custom JSON Template
      # - type: webhook
      #   enabled: false
      #   name: "custom-format"
      #   template: |
      #     {
      #       "event": "{{.Type}}",
      #       "severity": "{{.Priority}}",
      #       "title": "{{.Title}}",
      #       "message": "{{.Message}}",
      #       "timestamp": "{{.Timestamp}}"
      #     }
      #   endpoints:
      #     - url: "https://api.example.com/events"
      #       auth:
      #         type: bearer
      #         token: "${EVENT_API_TOKEN}"

      # Security Best Practices:
      # 1. NEVER commit secrets to git - use environment variables or file references
      # 2. For Docker: docker run -e WEBHOOK_TOKEN=xyz birdnet-go
      # 3. For Kubernetes: Mount secrets as files in /run/secrets/
      # 4. For development: Create .env file (add to .gitignore!)
      # 5. Use ${VAR:-default} syntax for optional env vars with defaults
      # 6. Set file permissions to 0400 or 0600 for secret files
